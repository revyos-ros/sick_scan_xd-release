#
# Select ROS-2 version, e.g. foxy or humble
#

FROM osrf/ros:foxy-desktop

#
# install ROS package
#
RUN apt-get update && apt-get install -y ros-${ROS_DISTRO}-desktop ros-${ROS_DISTRO}-rviz2 psmisc
RUN rm -rf /var/lib/apt/lists/*

#
# copy or checkout sick_scan_xd to current docker container
#
RUN mkdir -p /workspace/src
COPY ./src /workspace/src/
WORKDIR /workspace

#
# workaround for missing diagnostic_updater in osrf/ros:${ROS_DISTRO}-desktop, checkout appropriate version from https://github.com/ros/diagnostics,
# for eloquent and foxy added in roswrap/src/rossimu/${ROS_DISTRO}/include/diagnostic_updater
#
RUN mkdir -p /workspace/src/sick_scan_xd/include/diagnostic_updater
COPY ./src/sick_scan_xd/roswrap/src/rossimu/${ROS_DISTRO}/include/diagnostic_updater /workspace/src/sick_scan_xd/include/diagnostic_updater

#
# build msgpack11 in docker container
#
RUN /bin/bash -c "mkdir -p ./build/msgpack11 ; pushd ./build/msgpack11 ; cmake -G \"Unix Makefiles\" -D CMAKE_CXX_FLAGS=-fPIC -D CMAKE_BUILD_TYPE=Release -D MSGPACK11_BUILD_TESTS=0 ../../src/msgpack11 ; make ; make install ; popd"

#
# build libsick_ldmrs in docker container
#
RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash ; colcon build --packages-select libsick_ldmrs --event-handlers console_direct+"

#
# build sick_scan_xd in docker container
#
RUN /bin/bash -c "source ./install/setup.bash ; colcon build --packages-select sick_scan --cmake-args \" -DROS_VERSION=2\" \" -DCMAKE_ENABLE_EMULATOR=1\" --event-handlers console_direct+ ; source ./install/setup.bash"
RUN /bin/bash -c "echo -e \"\nsick_scan_xd colcon build finished:\" ; ls -al /workspace/build/sick_scan/sick_generic_caller ; ls -al /workspace/install/sick_scan/lib/sick_scan/sick_generic_caller"

#
# launch ros package, run sick_scan_xd with TiM7xx emulator
#
CMD /bin/bash -c "cd /workspace/src/sick_scan_xd/test/scripts ; ls -al ; ./run_linux_ros2_simu_tim7xx_tim7xxS.bash"
