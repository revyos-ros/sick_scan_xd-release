#
# Build sick_scan_xd in docker container
#

# Install Ubuntu
FROM ubuntu:20.04
RUN apt-get update && apt-get -y install cmake gcc g++ libjsoncpp-dev firefox

# Create workspace (checkout or copy local version)
RUN mkdir -p /workspace/src
COPY ./src /workspace/src/
WORKDIR /workspace/src

# Build libsick_ldmrs
RUN /bin/bash -c "pushd ./libsick_ldmrs ; mkdir -p ./build ; cd ./build ; cmake -G \"Unix Makefiles\" .. ; make -j4 ; make -j4 install ; popd"

# Build msgpack11
RUN /bin/bash -c "mkdir -p ./build ; pushd ./build ; cmake -G \"Unix Makefiles\" -DMSGPACK11_BUILD_TESTS=0 -DCMAKE_POSITION_INDEPENDENT_CODE=ON ../msgpack11 ; make -j4 ; make install ; popd"

# Build sick_scan_xd
RUN /bin/bash -c "mkdir -p ./build ; pushd ./build ; rm -rf ./* ; export ROS_VERSION=0 ; cmake -DROS_VERSION=0 -DCMAKE_ENABLE_EMULATOR=1 -G \"Unix Makefiles\" ../sick_scan_xd ; make -j4 ; make -j4 install ; ls -al ./sick_generic_caller ./libsick_scan_xd_shared_lib.so ; popd"

# Create test folder
RUN /bin/bash -c "pushd ./sick_scan_xd ; ln -s ../build ./build_linux ; popd"

#
# Run sick_scan_xd with lms_5xx emulator
#
CMD /bin/bash -c "cd /workspace/src/sick_scan_xd/test/scripts ; ls -al ../../build_linux/* ; ./run_linux_api_test_lms5xx.bash"
